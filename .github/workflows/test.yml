name: test

on: [push, pull_request]

env:
  GOPATH: ${{ github.workspace }}
  WORKSPACE: ${{ github.workspace }}/src/github.com/${{ github.repository }}

jobs:
  test:
    defaults:
      run:
        working-directory: ${{ env.WORKSPACE }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go: ['1.20', '1.21', '1.22']
    name: ${{ matrix.os }} @ Go ${{ matrix.go }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ${{ env.WORKSPACE }}

      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-


      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v --coverpkg=github.com/shamaton/msgpack/... --coverprofile=coverage.coverprofile --covermode=atomic ./...

      - name: Upload coverage to Codecov
        if: success() && matrix.go == '1.22' && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          working-directory: ${{ env.WORKSPACE }}

  lint:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ${{ env.WORKSPACE }}
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          workdir: ${{ env.WORKSPACE }}
          level: warning
          reporter: github-pr-review
